#!/bin/bash

# =============================================================================
# GITHUB PUBLICATION SCRIPT FOR MONASTYR PROJECT
# =============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

header() {
    echo -e "${CYAN}$1${NC}"
}

clear

header "üêô MONASTYR PROJECT - –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –ù–ê GITHUB"
header "============================================"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è Git..."

if [ -n "$(git status --porcelain)" ]; then
    warning "–ï—Å—Ç—å –Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –•–æ—Ç–∏—Ç–µ –∏—Ö –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å? (y/n)"
    read -p "" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git add .
        echo "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:"
        read -r commit_message
        git commit -m "$commit_message"
        success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã"
    else
        warning "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏..."
    fi
fi

# –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
echo ""
info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —É–∂–µ GitHub remote
if git remote get-url github >/dev/null 2>&1; then
    current_github_url=$(git remote get-url github)
    info "GitHub remote —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $current_github_url"
    
    warning "–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å URL GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è? (y/n)"
    read -p "" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π URL GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (https://github.com/username/repo.git): " github_url
        git remote set-url github "$github_url"
        success "GitHub remote –æ–±–Ω–æ–≤–ª–µ–Ω"
    fi
else
    read -p "–í–≤–µ–¥–∏—Ç–µ URL GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (https://github.com/username/repo.git): " github_url
    
    if [ -z "$github_url" ]; then
        error "URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        exit 1
    fi
    
    git remote add github "$github_url"
    success "GitHub remote –¥–æ–±–∞–≤–ª–µ–Ω"
fi

# –í—ã–±–æ—Ä –≤–µ—Ç–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
echo ""
info "–í—ã–±–æ—Ä –≤–µ—Ç–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏..."

echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ç–∫–∏:"
git branch -a

echo ""
current_branch=$(git branch --show-current)
info "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $current_branch"

echo ""
echo "–ö–∞–∫—É—é –≤–µ—Ç–∫—É —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ GitHub?"
echo "1) –¢–µ–∫—É—â—É—é –≤–µ—Ç–∫—É ($current_branch)"
echo "2) –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ç–∫—É main"
echo "3) –£–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥—É—é –≤–µ—Ç–∫—É"

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-3): " branch_choice

case $branch_choice in
    1)
        target_branch="$current_branch"
        ;;
    2)
        info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏ main..."
        git checkout -b main 2>/dev/null || git checkout main
        target_branch="main"
        ;;
    3)
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏: " target_branch
        if ! git rev-parse --verify "$target_branch" >/dev/null 2>&1; then
            warning "–í–µ—Ç–∫–∞ $target_branch –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—Ç—å –µ—ë? (y/n)"
            read -p "" -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                git checkout -b "$target_branch"
            else
                error "–í–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                exit 1
            fi
        fi
        git checkout "$target_branch"
        ;;
    *)
        error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

success "–í—ã–±—Ä–∞–Ω–∞ –≤–µ—Ç–∫–∞: $target_branch"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤
echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ README.md
if [ ! -f README.md ]; then
    warning "README.md –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π README? (y/n)"
    read -p "" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "# Monastyr Project" > README.md
        echo "" >> README.md
        echo "–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–æ–º –º–æ–Ω–∞—Å—Ç—ã—Ä—è." >> README.md
        git add README.md
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ LICENSE
if [ ! -f LICENSE ]; then
    warning "LICENSE –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—Ç—å MIT –ª–∏—Ü–µ–Ω–∑–∏—é? (y/n)"
    read -p "" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        cat > LICENSE << 'EOF'
MIT License

Copyright (c) 2025 Monastyr Project

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
EOF
        git add LICENSE
    fi
fi

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ GitHub
echo ""
info "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ GitHub..."

echo "–ì–æ—Ç–æ–≤—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ GitHub? (y/n)"
read -p "" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    info "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞
if [ -n "$(git status --porcelain)" ]; then
    git add .
    git commit -m "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è GitHub –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
fi

# Push –Ω–∞ GitHub
info "–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ GitHub..."

if git push github "$target_branch" 2>&1; then
    success "üéâ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ GitHub!"
else
    warning "–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)"
    echo "–•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É? (y/n)"
    read -p "" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git push --force github "$target_branch"
        success "üéâ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ GitHub (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)!"
    else
        error "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞"
        exit 1
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitHub –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π remote (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo ""
warning "–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å GitHub –æ—Å–Ω–æ–≤–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º? (y/n)"
read -p "" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    git remote rename origin sourcecraft
    git remote rename github origin
    success "GitHub —Ç–µ–ø–µ—Ä—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (origin)"
    info "Sourcecraft –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ 'sourcecraft'"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–≥–æ–≤
echo ""
info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–≥–∞ –≤–µ—Ä—Å–∏–∏..."
echo "–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ç–µ–≥ —Ä–µ–ª–∏–∑–∞? (y/n)"
read -p "" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, v1.0.0): " version
    if [ -n "$version" ]; then
        git tag -a "$version" -m "Release $version"
        git push github "$version"
        success "–¢–µ–≥ $version —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
    fi
fi

echo ""
header "üéâ –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!"
header "======================="
echo ""

github_url=$(git remote get-url github)
repo_name=$(basename -s .git "$github_url")
username=$(basename $(dirname "$github_url"))

echo "üîó –í–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $github_url"
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $username"
echo "üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $repo_name"
echo "üåø –í–µ—Ç–∫–∞: $target_branch"
echo ""

echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ GitHub –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω"
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
echo "3. –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–º—ã (topics) –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞"
echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Actions –¥–ª—è CI/CD (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
echo "5. –°–æ–∑–¥–∞–π—Ç–µ Release –Ω–∞ GitHub (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
echo ""

echo "üõ†Ô∏è –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub:"
echo "git push github main              # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub"
echo "git pull github main              # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo "git push --all github             # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –≤–µ—Ç–æ–∫"
echo "git push --tags github            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤"
echo ""

success "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–∞ GitHub! üêô"
