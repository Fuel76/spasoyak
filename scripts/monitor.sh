#!/bin/bash

# =============================================================================
# MONITORING SCRIPT FOR MONASTYR PROJECT
# =============================================================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[OK]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    echo "=== –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
    docker-compose ps
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
check_health() {
    echo "=== –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò ==="
    
    # Frontend
    if curl -f -s http://localhost:80 > /dev/null; then
        success "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω (http://localhost:80)"
    else
        error "Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # Backend API
    if curl -f -s http://localhost:3000/health > /dev/null; then
        success "Backend API –¥–æ—Å—Ç—É–ø–µ–Ω (http://localhost:3000)"
    else
        error "Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # Database
    if docker-compose exec -T db mysqladmin ping -h localhost --silent; then
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
    
    # Redis
    if docker-compose exec -T redis redis-cli ping > /dev/null 2>&1; then
        success "Redis –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        warning "Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
check_resources() {
    echo "=== –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í ==="
    docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}\t{{.BlockIO}}"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
check_logs() {
    echo "=== –ü–û–°–õ–ï–î–ù–ò–ï –û–®–ò–ë–ö–ò –í –õ–û–ì–ê–• ==="
    
    # Backend logs
    echo "Backend:"
    docker-compose logs --tail=10 backend | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    
    # Frontend logs
    echo "Frontend:"
    docker-compose logs --tail=10 frontend | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    
    # Database logs
    echo "Database:"
    docker-compose logs --tail=10 db | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
check_disk() {
    echo "=== –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –î–ò–°–ö–ê ==="
    df -h | grep -E "(Filesystem|/dev/)"
    echo ""
    
    echo "=== –†–ê–ó–ú–ï–† DOCKER VOLUMES ==="
    docker system df
    echo ""
}

# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
full_check() {
    echo "üèõÔ∏è  MONASTYR PROJECT - –ú–û–ù–ò–¢–û–†–ò–ù–ì"
    echo "=================================="
    echo "–í—Ä–µ–º—è: $(date)"
    echo ""
    
    check_services
    check_health
    check_resources
    check_disk
    check_logs
    
    echo "=================================="
    echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
continuous_monitor() {
    while true; do
        clear
        full_check
        echo ""
        echo "–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)"
        sleep 30
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-full}" in
    "full")
        full_check
        ;;
    "watch")
        continuous_monitor
        ;;
    "services")
        check_services
        ;;
    "health")
        check_health
        ;;
    "resources")
        check_resources
        ;;
    "logs")
        check_logs
        ;;
    "disk")
        check_disk
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [full|watch|services|health|resources|logs|disk]"
        echo ""
        echo "  full       - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  watch      - –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
        echo "  services   - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo "  health     - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
        echo "  resources  - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
        echo "  logs       - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏"
        echo "  disk       - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞"
        exit 1
        ;;
esac
