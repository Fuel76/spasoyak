import React, { useState, useEffect } from 'react';
import SunEditor from 'suneditor-react';
import 'suneditor/dist/css/suneditor.min.css';
import './NewsEditor.css';
// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import SunEditorCore from 'suneditor/src/lib/core';

interface NewsEditorProps {
  newsId?: number;
}

export const NewsEditor: React.FC<NewsEditorProps> = ({ newsId }) => {
  const [title, setTitle] = useState('');
  const [content, setContent] = useState('');
  const [htmlContent, setHtmlContent] = useState('');
  const [coverUrl, setCoverUrl] = useState('');
  const [mediaUrls, setMediaUrls] = useState<string[]>([]);
  const [newMediaUrl, setNewMediaUrl] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [previewMode, setPreviewMode] = useState(false);
  const [history, setHistory] = useState<Array<{ title: string; htmlContent: string; timestamp: Date }>>([]);
  const [showHistory, setShowHistory] = useState(false);
  const [customCss, setCustomCss] = useState('');
  const fileInputRef = React.useRef<HTMLInputElement>(null);

  // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º SunEditorCore
  const sunEditorRef = React.useRef<SunEditorCore>(null);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
  const addToHistory = () => {
    setHistory(prev => [{ title, htmlContent, timestamp: new Date() }, ...prev.slice(0, 9)]);
  };
  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
  const restoreFromHistory = (index: number) => {
    if (window.confirm('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç—É –≤–µ—Ä—Å–∏—é? –¢–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.')) {
      const item = history[index];
      setTitle(item.title);
      setHtmlContent(item.htmlContent);
      setShowHistory(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  useEffect(() => {
    if (newsId) {
      setLoading(true);
      setError(null);
      fetch(`/api/news/${newsId}`)
        .then(res => {
          if (!res.ok) {
            throw new Error(`–û—à–∏–±–∫–∞: ${res.status}`);
          }
          return res.json();
        })
        .then(news => {
          setTitle(news.title || '');
          setContent(news.content || '');
          setHtmlContent(news.htmlContent || '');
          setCoverUrl(news.cover || '');
          setCustomCss(news.customCss || ''); // –∑–∞–≥—Ä—É–∂–∞–µ–º customCss
          
          // –ü–∞—Ä—Å–∏–Ω–≥ –º–µ–¥–∏–∞-URL
          try {
            let media: string[] = [];
            if (typeof news.media === 'string') {
              media = JSON.parse(news.media);
            } else if (Array.isArray(news.media)) {
              media = news.media;
            }
            setMediaUrls(media);
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ media:', error);
            setMediaUrls([]);
          }
          
          setLoading(false);
        })
        .catch(err => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–∏:', err);
          setError(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å: ${err.message}`);
          setLoading(false);
        });
    }
  }, [newsId]);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ URL –º–µ–¥–∏–∞
  const handleAddMediaUrl = () => {
    if (newMediaUrl.trim()) {
      setMediaUrls([...mediaUrls, newMediaUrl.trim()]);
      setNewMediaUrl('');
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ URL –º–µ–¥–∏–∞
  const handleRemoveMediaUrl = (index: number) => {
    setMediaUrls(mediaUrls.filter((_, i) => i !== index));
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
  const handleSave = async () => {
    if (!title.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏');
      return;
    }

    try {
      const method = newsId ? 'PUT' : 'POST';
      const url = newsId ? `/api/news/${newsId}` : '/api/news';
      
      const newsData = {
        title,
        content,
        htmlContent,
        cover: coverUrl,
        media: JSON.stringify(mediaUrls),
        customCss, // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º customCss
        // –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä isVisible, –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –∑–¥–µ—Å—å
      };

      const response = await fetch(url, {
        method,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(newsData),
      });

      if (response.ok) {
        alert(newsId ? '–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!' : '–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
        // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
        // window.location.href = '/admin/news';
      } else {
        const errorData = await response.json();
        alert(`–û—à–∏–±–∫–∞: ${errorData.error || response.statusText}`);
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
      alert('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.');
    }
  };

  // –î–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —à–∞–±–ª–æ–Ω–∞ –º–∞–∫–µ—Ç–∞
  const handleInsertLayout = (layoutType: string) => {
    const editor = sunEditorRef.current;
    if (!editor) return;
    let layoutHtml = '';
    switch (layoutType) {
      case 'two-columns':
        layoutHtml = `
          <div class="layout layout-two-columns">
            <div class="column">
              <p>–¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏...</p>
            </div>
            <div class="column">
              <p>–¢–µ–∫—Å—Ç –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–∏...</p>
            </div>
          </div>
        `;
        break;
      case 'image-left':
        layoutHtml = `
          <div class="layout layout-image-text">
            <div class="image-container">
              <img src="https://placehold.co/400x300" alt="Placeholder" />
              <em class="caption">–ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é</em>
            </div>
            <div class="text-container">
              <p>–¢–µ–∫—Å—Ç —Ä—è–¥–æ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–ª–µ–≤–∞...</p>
            </div>
          </div>
        `;
        break;
      case 'image-right':
        layoutHtml = `
          <div class="layout layout-text-image">
            <div class="text-container">
              <p>–¢–µ–∫—Å—Ç —Ä—è–¥–æ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–ø—Ä–∞–≤–∞...</p>
            </div>
            <div class="image-container">
              <img src="https://placehold.co/400x300" alt="Placeholder" />
              <em class="caption">–ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é</em>
            </div>
          </div>
        `;
        break;
      case 'image-text-wrap':
        layoutHtml = `
          <div class="image-wrap-left">
            <img src="https://placehold.co/300x200" alt="Placeholder" />
            <em class="caption">–ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é</em>
          </div>
          <p>–¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ç–µ–∫–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–µ–≤–∞. –î–æ–±–∞–≤—å—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –æ–±—Ç–µ–∫–∞–Ω–∏—è...</p>
        `;
        break;
      case 'video-text':
        layoutHtml = `
          <div class="layout layout-video-text">
            <div class="video-container">
              <div class="video-embed">
                <!-- –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤—Å—Ç–∞–≤–∫–∏ YouTube/Vimeo -->
                <iframe width="100%" height="100%" src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" allowfullscreen></iframe>
              </div>
            </div>
            <div class="text-container">
              <p>–¢–µ–∫—Å—Ç —Ä—è–¥–æ–º —Å –≤–∏–¥–µ–æ...</p>
            </div>
          </div>
        `;
        break;
      case 'callout':
        layoutHtml = `<div class="callout-block">üí° <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –í–∞—à —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å...</div>`;
        break;
      case 'alert':
        layoutHtml = `<div class="alert-block">‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –í–∞—à–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ...</div>`;
        break;
      case 'button':
        layoutHtml = `<a href="#" class="news-btn">–ö–Ω–æ–ø–∫–∞</a>`;
        break;
      case 'divider':
        layoutHtml = `<hr class="news-divider" />`;
        break;
      case 'quote':
        layoutHtml = `<blockquote class="news-quote">–¶–∏—Ç–∞—Ç–∞ –∏–ª–∏ –æ—Ç–∑—ã–≤...</blockquote>`;
        break;
      default:
        return;
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º HTML –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
    editor.insertHTML(layoutHtml);
  };

  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  const editorOptions = {
    height: '500px',
    buttonList: [
      // –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞
      ['undo', 'redo'],
      ['font', 'fontSize', 'formatBlock'],
      ['paragraphStyle', 'blockquote'],
      ['bold', 'italic', 'underline', 'strike', 'subscript', 'superscript'],
      ['fontColor', 'hiliteColor', 'textStyle', 'align', 'horizontalRule', 'list', 'lineHeight'],
      ['outdent', 'indent'],
      ['table', 'link', 'image', 'video', 'audio', 'codeView', 'fullScreen', 'showBlocks', 'preview', 'template', 'removeFormat'],
    ],
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    imageGalleryUrl: '/api/images/gallery', // URL –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    imageUploadUrl: '/api/upload-image-from-editor',
    imageAccept: '.jpg, .jpeg, .png, .gif, .bmp, .webp',
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    imageFileInput: true, // –†–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
    imageUrlInput: true, // –†–∞–∑—Ä–µ—à–∏—Ç—å –≤–≤–æ–¥ URL
    imageResizing: true, // –†–∞–∑—Ä–µ—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
    imageWidth: 'auto', // –ù–∞—á–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ (–∞–≤—Ç–æ)
    imageAlignShow: true, // –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏–∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–∏–¥–µ–æ
    videoResizing: true, 
    videoFileInput: false, // –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –æ–±—ã—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    videoUrlInput: true,
    videoRatioShow: true, // –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω
    
    // –°—Ç–∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    defaultStyle: 'font-family: Arial, sans-serif; font-size: 16px; line-height: 1.6;',
  };

  // –ò–º–ø–æ—Ä—Ç HTML
  const handleHtmlImport = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;
    const text = await file.text();
    setHtmlContent(text);
    if (fileInputRef.current) fileInputRef.current.value = '';
  };

  // –≠–∫—Å–ø–æ—Ä—Ç HTML
  const handleExport = () => {
    const fullHtml = `<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n<meta charset=\"UTF-8\">\n<title>${title}</title>\n<style>${customCss}</style>\n</head>\n<body>\n${htmlContent}\n</body>\n</html>`;
    const blob = new Blob([fullHtml], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${title.replace(/\s+/g, '-').toLowerCase() || 'news'}.html`;
    document.body.appendChild(a);
    a.click();
    setTimeout(() => {
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }, 0);
  };

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏...</div>;
  }

  if (error) {
    return <div className="error-message">{error}</div>;
  }

  return (
    <div className="news-editor">
      <h2>{newsId ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏' : '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏'}</h2>
      <div className="news-editor__field">
        <label htmlFor="news-title" style={{ fontWeight: 'bold', display: 'block', marginBottom: 6 }}>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏:</label>
        <input
          id="news-title"
          name="news-title"
          type="text"
          value={title}
          onChange={e => setTitle(e.target.value)}
          className="news-editor__input"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏"
          style={{ width: '100%', padding: '8px 12px', fontSize: 18, borderRadius: 6, border: '1px solid #d0d0d0', marginBottom: 18 }}
          autoComplete="off"
        />
      </div>
      <div style={{ display: 'flex', gap: 8, marginBottom: 12 }}>
        <button type="button" onClick={() => setPreviewMode((v) => !v)}>
          {previewMode ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' : '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä'}
        </button>
        <button type="button" onClick={() => setShowHistory((v) => !v)}>
          –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π ({history.length})
        </button>
        <button type="button" onClick={handleExport}>–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å HTML</button>
        <button type="button" onClick={addToHistory}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∏—Å—Ç–æ—Ä–∏—é</button>
        <label style={{ display: 'inline-block' }}>
          <span style={{ cursor: 'pointer', padding: '0 8px' }}>–ò–º–ø–æ—Ä—Ç HTML</span>
          <input
            type="file"
            accept=".html,.htm"
            onChange={handleHtmlImport}
            ref={fileInputRef}
            style={{ display: 'none' }}
          />
        </label>
      </div>
      
      {/* –ü–∞–Ω–µ–ª—å –º–∞–∫–µ—Ç–æ–≤ (–¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–¥ —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º) */}
      <div className="news-editor__layouts">
        <h3>–í—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫–µ—Ç:</h3>
        <div className="news-editor__layouts-buttons">
          <button type="button" onClick={() => handleInsertLayout('two-columns')} title="–î–≤–µ –∫–æ–ª–æ–Ω–∫–∏">
            –î–≤–µ –∫–æ–ª–æ–Ω–∫–∏
          </button>
          <button type="button" onClick={() => handleInsertLayout('image-left')} title="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–µ–≤–∞ –æ—Ç —Ç–µ–∫—Å—Ç–∞">
            –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + —Ç–µ–∫—Å—Ç
          </button>
          <button type="button" onClick={() => handleInsertLayout('image-right')} title="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ç–µ–∫—Å—Ç–∞">
            –¢–µ–∫—Å—Ç + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          </button>
          <button type="button" onClick={() => handleInsertLayout('image-text-wrap')} title="–û–±—Ç–µ–∫–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º">
            –û–±—Ç–µ–∫–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
          </button>
          <button type="button" onClick={() => handleInsertLayout('video-text')} title="–í–∏–¥–µ–æ + —Ç–µ–∫—Å—Ç">
            –í–∏–¥–µ–æ + —Ç–µ–∫—Å—Ç
          </button>
          <button type="button" onClick={() => handleInsertLayout('callout')} title="Callout">
            Callout
          </button>
          <button type="button" onClick={() => handleInsertLayout('alert')} title="Alert">
            Alert
          </button>
          <button type="button" onClick={() => handleInsertLayout('button')} title="–ö–Ω–æ–ø–∫–∞">
            –ö–Ω–æ–ø–∫–∞
          </button>
          <button type="button" onClick={() => handleInsertLayout('divider')} title="–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å">
            –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
          </button>
          <button type="button" onClick={() => handleInsertLayout('quote')} title="–¶–∏—Ç–∞—Ç–∞">
            –¶–∏—Ç–∞—Ç–∞
          </button>
        </div>
      </div>
      
      {showHistory && (
        <div className="news-editor__history">
          <h3>–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π</h3>
          {history.length === 0 ? (
            <p>–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</p>
          ) : (
            <ul className="history-list">
              {history.map((item, idx) => (
                <li key={idx} className="history-item">
                  <span className="history-time">{item.timestamp.toLocaleString()}</span>
                  <span className="history-title">{item.title}</span>
                  <button className="history-restore-btn" onClick={() => restoreFromHistory(idx)}>
                    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                  </button>
                </li>
              ))}
            </ul>
          )}
        </div>
      )}
      {previewMode ? (
        <div className="news-preview">
          <style dangerouslySetInnerHTML={{ __html: customCss }} />
          <h1>{title}</h1>
          <div dangerouslySetInnerHTML={{ __html: htmlContent }} />
        </div>
      ) : (
        <>
          <SunEditor
            getSunEditorInstance={(sunEditor) => {
              sunEditorRef.current = sunEditor;
            }}
            setOptions={editorOptions}
            setContents={htmlContent}
            onChange={setHtmlContent}
          />
          <div style={{ margin: '16px 0' }}>
            <label style={{ fontWeight: 'bold' }}>CSS –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:</label>
            <textarea
              value={customCss}
              onChange={e => setCustomCss(e.target.value)}
              rows={5}
              style={{ width: '100%', fontFamily: 'monospace', fontSize: 14, marginTop: 4 }}
              placeholder="–í–≤–µ–¥–∏—Ç–µ CSS –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏"
            />
          </div>
        </>
      )}

      <textarea
        placeholder="–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ (—Ç–µ–∫—Å—Ç)"
        value={content}
        onChange={(e) => setContent(e.target.value)}
        className="news-editor__textarea"
      />

      <div className="news-editor__media">
        <label>
          –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–æ–∂–∫—É:
          <input
            type="text"
            value={coverUrl}
            onChange={(e) => setCoverUrl(e.target.value)}
            placeholder="https://example.com/cover.jpg"
            className="news-editor__url-input"
          />
        </label>
        {coverUrl && (
          <img src={coverUrl} alt="–ü—Ä–µ–≤—å—é –æ–±–ª–æ–∂–∫–∏" className="news-editor__cover-preview" />
        )}
      </div>

      <div className="news-editor__media">
        <label>
          –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:
          <input
            type="text"
            value={newMediaUrl}
            onChange={(e) => setNewMediaUrl(e.target.value)}
            placeholder="https://example.com/image.jpg"
            className="news-editor__url-input"
          />
          <button type="button" onClick={handleAddMediaUrl} className="news-editor__add-btn">
            –î–æ–±–∞–≤–∏—Ç—å
          </button>
        </label>
        
        <ul>
          {mediaUrls.map((url, index) => (
            <li key={index}>
              <img src={url} alt={`media-${index}`} className="news-editor__media-thumb" />
              <span className="news-editor__media-url">{url}</span>
              <button
                type="button"
                onClick={() => handleRemoveMediaUrl(index)}
                className="news-editor__remove-btn"
              >
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </li>
          ))}
        </ul>
      </div>

      <div className="news-editor__actions">
        <button type="button" onClick={handleSave} className="news-editor__save-btn">
          {newsId ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å'}
        </button>
      </div>
    </div>
  );
};