import React, { useState } from 'react';
import './ImageUploadSettings.css';

export interface ImageUploadSettings {
  usePostImages: boolean;
  autoUploadToPostImages: boolean;
  fallbackToLocal: boolean;
}

interface ImageUploadSettingsProps {
  settings: ImageUploadSettings;
  onSettingsChange: (settings: ImageUploadSettings) => void;
}

const ImageUploadSettings: React.FC<ImageUploadSettingsProps> = ({
  settings,
  onSettingsChange
}) => {
  const [isExpanded, setIsExpanded] = useState(false);

  const handleSettingChange = (key: keyof ImageUploadSettings, value: boolean) => {
    onSettingsChange({
      ...settings,
      [key]: value
    });
  };

  return (
    <div className="image-upload-settings">
      <button
        className="settings-toggle"
        onClick={() => setIsExpanded(!isExpanded)}
        type="button"
      >
        ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        <span className={`arrow ${isExpanded ? 'expanded' : ''}`}>‚ñº</span>
      </button>
      
      {isExpanded && (
        <div className="settings-panel">
          <div className="settings-group">
            <h4>üñºÔ∏è –°–µ—Ä–≤–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h4>
            
            <label className="setting-item">
              <input
                type="checkbox"
                checked={settings.usePostImages}
                onChange={(e) => handleSettingChange('usePostImages', e.target.checked)}
              />
              <span className="checkmark"></span>
              <div className="setting-info">
                <div className="setting-title">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PostImages.org</div>
                <div className="setting-description">
                  –ó–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å PostImages.org
                </div>
              </div>
            </label>

            <label className="setting-item">
              <input
                type="checkbox"
                checked={settings.autoUploadToPostImages}
                onChange={(e) => handleSettingChange('autoUploadToPostImages', e.target.checked)}
                disabled={!settings.usePostImages}
              />
              <span className="checkmark"></span>
              <div className="setting-info">
                <div className="setting-title">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</div>
                <div className="setting-description">
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–∞ PostImages –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞
                </div>
              </div>
            </label>

            <label className="setting-item">
              <input
                type="checkbox"
                checked={settings.fallbackToLocal}
                onChange={(e) => handleSettingChange('fallbackToLocal', e.target.checked)}
                disabled={!settings.usePostImages}
              />
              <span className="checkmark"></span>
              <div className="setting-info">
                <div className="setting-title">–†–µ–∑–µ—Ä–≤–Ω–æ–µ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ</div>
                <div className="setting-description">
                  –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ, –µ—Å–ª–∏ PostImages –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                </div>
              </div>
            </label>
          </div>

          <div className="service-status">
            <div className="status-item">
              <span className="status-indicator local">üü¢</span>
              <span>–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: –î–æ—Å—Ç—É–ø–Ω–æ</span>
            </div>
            <div className="status-item">
              <span className="status-indicator postimages">
                {settings.usePostImages ? 'üü°' : '‚ö™'}
              </span>
              <span>PostImages.org: {settings.usePostImages ? '–í–∫–ª—é—á–µ–Ω' : '–í—ã–∫–ª—é—á–µ–Ω'}</span>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ImageUploadSettings;
