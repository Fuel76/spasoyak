import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './AdminSettings.css';

interface SystemSettings {
  siteName: string;
  siteDescription: string;
  contactEmail: string;
  contactPhone: string;
  address: string;
  maxUploadSize: number;
  enableRegistration: boolean;
  enableComments: boolean;
  maintenanceMode: boolean;
  emailNotifications: boolean;
  backupFrequency: 'daily' | 'weekly' | 'monthly';
  timeZone: string;
  language: string;
  theme: 'light' | 'dark' | 'auto';
}

const AdminSettingsPage: React.FC = () => {
  const [settings, setSettings] = useState<SystemSettings>({
    siteName: '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π –º–æ–Ω–∞—Å—Ç—ã—Ä—å',
    siteDescription: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –º–æ–Ω–∞—Å—Ç—ã—Ä—è',
    contactEmail: 'info@monastery.ru',
    contactPhone: '+7 (800) 123-45-67',
    address: '–†–æ—Å—Å–∏—è, –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
    maxUploadSize: 10,
    enableRegistration: true,
    enableComments: true,
    maintenanceMode: false,
    emailNotifications: true,
    backupFrequency: 'daily',
    timeZone: 'Europe/Moscow',
    language: 'ru',
    theme: 'light'
  });

  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const getAuthToken = (): string | null => {
    const sessionData = localStorage.getItem('session');
    return sessionData ? JSON.parse(sessionData).token : null;
  };

  useEffect(() => {
    loadSettings();
  }, []);

  const loadSettings = async () => {
    try {
      const response = await fetch('/api/settings', {
        headers: {
          'Authorization': `Bearer ${getAuthToken()}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        setSettings(data);
      } else {
        setMessage({ type: 'error', text: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.' });
        setTimeout(() => setMessage(null), 3000);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      setMessage({ type: 'error', text: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.' });
      setTimeout(() => setMessage(null), 3000);
    }
  };

  const handleChange = (field: keyof SystemSettings, value: any) => {
    setSettings(prev => ({ ...prev, [field]: value }));
  };

  const handleSave = async () => {
    setLoading(true);
    try {
      const response = await fetch('/api/settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${getAuthToken()}`
        },
        body: JSON.stringify(settings)
      });

      if (response.ok) {
        const data = await response.json();
        setSettings(data.settings);
        setMessage({ type: 'success', text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!' });
      } else {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      setMessage({ type: 'error', text: `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` });
    } finally {
      setLoading(false);
      setTimeout(() => setMessage(null), 3000);
    }
  };

  return (
    <div className="admin-settings-page">
      <div className="admin-settings-header">
        <div className="admin-settings-title">
          <h1>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
          <p>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∞–π—Ç–∞</p>
        </div>
        <div className="admin-settings-actions">
          <Link to="/admin" className="admin-btn admin-btn-outline">
            ‚Üê –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É
          </Link>
          <button 
            className="admin-btn admin-btn-primary"
            onClick={handleSave}
            disabled={loading}
          >
            {loading ? 'üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'}
          </button>
        </div>
      </div>

      {message && (
        <div className={`settings-message ${message.type}`}>
          {message.text}
        </div>
      )}

      <div className="settings-grid">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="settings-section">
          <div className="section-header">
            <h2>üèõÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <p>–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –º–æ–Ω–∞—Å—Ç—ã—Ä–µ</p>
          </div>
          <div className="settings-form">
            <div className="form-group">
              <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
              <input
                type="text"
                value={settings.siteName}
                onChange={(e) => handleChange('siteName', e.target.value)}
                className="form-input"
              />
            </div>
            <div className="form-group">
              <label>–û–ø–∏—Å–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
              <textarea
                value={settings.siteDescription}
                onChange={(e) => handleChange('siteDescription', e.target.value)}
                className="form-textarea"
                rows={3}
              />
            </div>
            <div className="form-group">
              <label>Email –¥–ª—è —Å–≤—è–∑–∏</label>
              <input
                type="email"
                value={settings.contactEmail}
                onChange={(e) => handleChange('contactEmail', e.target.value)}
                className="form-input"
              />
            </div>
            <div className="form-group">
              <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
              <input
                type="tel"
                value={settings.contactPhone}
                onChange={(e) => handleChange('contactPhone', e.target.value)}
                className="form-input"
              />
            </div>
            <div className="form-group">
              <label>–ê–¥—Ä–µ—Å</label>
              <input
                type="text"
                value={settings.address}
                onChange={(e) => handleChange('address', e.target.value)}
                className="form-input"
              />
            </div>
          </div>
        </div>

        {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="settings-section">
          <div className="section-header">
            <h2>üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
            <p>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã</p>
          </div>
          <div className="settings-form">
            <div className="form-group">
              <label>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ (–ú–ë)</label>
              <input
                type="number"
                value={settings.maxUploadSize}
                onChange={(e) => handleChange('maxUploadSize', Number(e.target.value))}
                className="form-input"
                min="1"
                max="100"
              />
            </div>
            <div className="form-group">
              <label>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</label>
              <select
                value={settings.timeZone}
                onChange={(e) => handleChange('timeZone', e.target.value)}
                className="form-select"
              >
                <option value="Europe/Moscow">–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è (GMT+3)</option>
                <option value="Europe/Kiev">–ö–∏–µ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è (GMT+2)</option>
                <option value="Europe/Minsk">–ú–∏–Ω—Å–∫–æ–µ –≤—Ä–µ–º—è (GMT+3)</option>
                <option value="Asia/Yekaterinburg">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥—Å–∫–æ–µ –≤—Ä–µ–º—è (GMT+5)</option>
              </select>
            </div>
            <div className="form-group">
              <label>–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</label>
              <select
                value={settings.language}
                onChange={(e) => handleChange('language', e.target.value)}
                className="form-select"
              >
                <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                <option value="en">English</option>
                <option value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
              </select>
            </div>
            <div className="form-group">
              <label>–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</label>
              <select
                value={settings.theme}
                onChange={(e) => handleChange('theme', e.target.value as 'light' | 'dark' | 'auto')}
                className="form-select"
              >
                <option value="light">–°–≤–µ—Ç–ª–∞—è</option>
                <option value="dark">–¢–µ–º–Ω–∞—è</option>
                <option value="auto">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</option>
              </select>
            </div>
          </div>
        </div>

        {/* –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å */}
        <div className="settings-section">
          <div className="section-header">
            <h2>‚ö° –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</h2>
            <p>–í–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π</p>
          </div>
          <div className="settings-form">
            <div className="form-group checkbox-group">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={settings.enableRegistration}
                  onChange={(e) => handleChange('enableRegistration', e.target.checked)}
                  className="form-checkbox"
                />
                <span className="checkbox-text">–†–∞–∑—Ä–µ—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</span>
              </label>
            </div>
            <div className="form-group checkbox-group">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={settings.enableComments}
                  onChange={(e) => handleChange('enableComments', e.target.checked)}
                  className="form-checkbox"
                />
                <span className="checkbox-text">–í–∫–ª—é—á–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –Ω–æ–≤–æ—Å—Ç—è–º</span>
              </label>
            </div>
            <div className="form-group checkbox-group">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={settings.emailNotifications}
                  onChange={(e) => handleChange('emailNotifications', e.target.checked)}
                  className="form-checkbox"
                />
                <span className="checkbox-text">Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
              </label>
            </div>
            <div className="form-group checkbox-group">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={settings.maintenanceMode}
                  onChange={(e) => handleChange('maintenanceMode', e.target.checked)}
                  className="form-checkbox"
                />
                <span className="checkbox-text">–†–µ–∂–∏–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è</span>
              </label>
              {settings.maintenanceMode && (
                <p className="checkbox-hint">‚ö†Ô∏è –°–∞–π—Ç –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</p>
              )}
            </div>
          </div>
        </div>

        {/* –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ */}
        <div className="settings-section">
          <div className="section-header">
            <h2>üíæ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
            <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞</p>
          </div>
          <div className="settings-form">
            <div className="form-group">
              <label>–ß–∞—Å—Ç–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π</label>
              <select
                value={settings.backupFrequency}
                onChange={(e) => handleChange('backupFrequency', e.target.value as 'daily' | 'weekly' | 'monthly')}
                className="form-select"
              >
                <option value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</option>
                <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
                <option value="monthly">–ï–∂–µ–º–µ—Å—è—á–Ω–æ</option>
              </select>
            </div>
            <div className="backup-actions">
              <button className="backup-btn">üì• –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é</button>
              <button className="backup-btn">üì§ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∫–æ–ø–∏–∏</button>
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
        <div className="settings-section">
          <div className="section-header">
            <h2>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</h2>
            <p>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ</p>
          </div>
          <div className="system-info">
            <div className="info-item">
              <span className="info-label">–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã:</span>
              <span className="info-value">1.0.0</span>
            </div>
            <div className="info-item">
              <span className="info-label">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span>
              <span className="info-value">15.01.2024</span>
            </div>
            <div className="info-item">
              <span className="info-label">–†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:</span>
              <span className="info-value">24.5 –ú–ë</span>
            </div>
            <div className="info-item">
              <span className="info-label">–î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:</span>
              <span className="info-value">1.2 –ì–ë / 10 –ì–ë</span>
            </div>
          </div>
        </div>

        {/* –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ */}
        <div className="settings-section danger-section">
          <div className="section-header">
            <h2>‚ö†Ô∏è –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</h2>
            <p>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</p>
          </div>
          <div className="danger-actions">
            <button className="danger-btn">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à</button>
            <button className="danger-btn">üìä –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</button>
            <button className="danger-btn">‚ö†Ô∏è –°–±—Ä–æ—Å –∫ –∑–∞–≤–æ–¥—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º</button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminSettingsPage;
