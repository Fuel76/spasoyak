import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { CalendarDay } from '../../types/calendar';
import { formatDateSafe } from '../../utils/dateUtils';
import './AdminCalendar.css';

const AdminCalendarPage: React.FC = () => {
  const [calendarDays, setCalendarDays] = useState<CalendarDay[]>([]);
  const [loading, setLoading] = useState(false);
  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth() + 1);
  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());
  const [error, setError] = useState('');

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  const fetchCalendarData = async () => {
    setLoading(true);
    setError('');
    try {
      const response = await fetch(`/api/calendar/month/${currentYear}/${currentMonth}`);
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      const data = await response.json();
      setCalendarDays(data);
    } catch (error: any) {
      setError(error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      setCalendarDays([]);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchCalendarData();
  }, [currentMonth, currentYear]);

  const navigateMonth = (direction: number) => {
    let newMonth = currentMonth + direction;
    let newYear = currentYear;

    if (newMonth > 12) {
      newMonth = 1;
      newYear++;
    } else if (newMonth < 1) {
      newMonth = 12;
      newYear--;
    }

    setCurrentMonth(newMonth);
    setCurrentYear(newYear);
  };

  const monthNames = [
    '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
    '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
  ];

  return (
    <div className="system-page-container">
      <div className="system-page-content">
        <h1 className="system-page-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º</h1>
        
        <div className="admin-calendar-nav">
          <Link to="/admin" className="system-btn-outline">‚Üê –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É</Link>
          <div className="calendar-quick-links">
            <Link to="/admin/calendar/saints" className="system-btn-secondary">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è—Ç—Ü–∞–º–∏</Link>
            <Link to="/admin/calendar/readings" className="system-btn-secondary">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á—Ç–µ–Ω–∏—è–º–∏</Link>
          </div>
        </div>

        <div className="system-content-card">
          <div className="calendar-header">
            <button 
              className="system-btn-outline" 
              onClick={() => navigateMonth(-1)}
            >
              ‚Üê
            </button>
            <h2>{monthNames[currentMonth - 1]} {currentYear}</h2>
            <button 
              className="system-btn-outline" 
              onClick={() => navigateMonth(1)}
            >
              ‚Üí
            </button>
          </div>

          {error && (
            <div className="system-alert system-alert-error">{error}</div>
          )}

          {loading ? (
            <div className="system-alert system-alert-info">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</div>
          ) : (
            <div className="admin-calendar-grid">
              <div className="calendar-weekdays">
                {['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'].map(day => (
                  <div key={day} className="weekday-header">{day}</div>
                ))}
              </div>
              
              <div className="calendar-days">
                {Array.from({ length: 42 }, (_, index) => {
                  const firstDay = new Date(currentYear, currentMonth - 1, 1).getDay();
                  const adjustedFirstDay = firstDay === 0 ? 7 : firstDay;
                  const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();
                  
                  const dayNumber = index - adjustedFirstDay + 2;
                  
                  if (dayNumber <= 0 || dayNumber > daysInMonth) {
                    return <div key={index} className="calendar-day empty"></div>;
                  }
                  
                  const dateString = formatDateSafe(new Date(currentYear, currentMonth - 1, dayNumber));
                  const calendarDay = calendarDays.find(d => d.date.startsWith(dateString));
                  
                  return (
                    <div key={index} className={`calendar-day ${calendarDay ? 'has-data' : ''}`}>
                      <div className="day-number">{dayNumber}</div>
                      
                      {calendarDay && (
                        <div className="day-data">
                          {calendarDay.saints.length > 0 && (
                            <div className="saints-count" title={`–°–≤—è—Ç—ã—Ö: ${calendarDay.saints.length}`}>
                              üëë {calendarDay.saints.length}
                            </div>
                          )}
                          {calendarDay.readings.length > 0 && (
                            <div className="readings-count" title={`–ß—Ç–µ–Ω–∏–π: ${calendarDay.readings.length}`}>
                              üìñ {calendarDay.readings.length}
                            </div>
                          )}
                          {calendarDay.isHoliday && (
                            <div className="holiday-mark" title="–ü—Ä–∞–∑–¥–Ω–∏–∫">üéâ</div>
                          )}
                        </div>
                      )}
                      
                      <Link 
                        to={`/admin/calendar/day/${dateString}`} 
                        className="edit-day-link"
                        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å"
                      >
                        ‚úèÔ∏è
                      </Link>
                    </div>
                  );
                })}
              </div>
            </div>
          )}
        </div>

        <div className="system-content-card">
          <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è</h3>
          <div className="calendar-stats">
            <div className="stat-item">
              <strong>–î–Ω–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏:</strong> {calendarDays.length}
            </div>
            <div className="stat-item">
              <strong>–ü—Ä–∞–∑–¥–Ω–∏–∫–æ–≤:</strong> {calendarDays.filter(d => d.isHoliday).length}
            </div>
            <div className="stat-item">
              <strong>–í—Å–µ–≥–æ —Å–≤—è—Ç—ã—Ö:</strong> {calendarDays.reduce((sum, d) => sum + d.saints.length, 0)}
            </div>
            <div className="stat-item">
              <strong>–í—Å–µ–≥–æ —á—Ç–µ–Ω–∏–π:</strong> {calendarDays.reduce((sum, d) => sum + d.readings.length, 0)}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminCalendarPage;
